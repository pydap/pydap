# This workflow will attempt to publish the current version of pydap to PyPI
# when either:
#
# * A GitHub release is published.
# * A manual invocation of the workflow occurs.
#
# Both of the above actions should be limited to repository owners or admins.
# For publication to be successful, the repository must have a PYPI_API_TOKEN
# secret generated by a PyPI user with maintainer (or higher) privileges on the
# pydap package in PyPI.
#
# The build Python package determines the version via setup.py, which in turn
# retrieves the version number from src/pydap/__init__.py.
name: Publish to PyPI.org

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout pydap repository
      uses: actions/checkout@v4

    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Get tags
      run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      shell: bash

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip wheel setuptools setuptools_scm build twine
      shell: bash

    - name: Build binary wheel
      run: python -m build --sdist --wheel . --outdir dist

    - name: CheckFiles
      run: |
        ls dist
      shell: bash

    - name: Test wheels
      run: |
        cd dist && python -m pip install pydap*.whl
        python -m twine check *
        python -c "import pydap; print(f'pydap v{pydap.__version__}')"
      shell: bash

    - name: Publish new pydap package to PyPI
      if: success() && github.event_name == 'release'
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}
