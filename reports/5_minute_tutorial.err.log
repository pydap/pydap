Traceback (most recent call last):
  File "/Users/miguelangeljimenezurias/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/Users/miguelangeljimenezurias/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/nbclient/client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/miguelangeljimenezurias/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/miguelangeljimenezurias/mambaforge/envs/pydap_docs/lib/python3.11/asyncio/base_events.py", line 654, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/Users/miguelangeljimenezurias/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "/Users/miguelangeljimenezurias/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/miguelangeljimenezurias/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
pydap_ds = open_url(url, protocol='dap4')
------------------


[0;31m---------------------------------------------------------------------------[0m
[0;31mgaierror[0m                                  Traceback (most recent call last)
File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/urllib3/connection.py:199[0m, in [0;36mHTTPConnection._new_conn[0;34m(self)[0m
[1;32m    198[0m [38;5;28;01mtry[39;00m:
[0;32m--> 199[0m     sock [38;5;241m=[39m [43mconnection[49m[38;5;241;43m.[39;49m[43mcreate_connection[49m[43m([49m
[1;32m    200[0m [43m        [49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_dns_host[49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mport[49m[43m)[49m[43m,[49m
[1;32m    201[0m [43m        [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mtimeout[49m[43m,[49m
[1;32m    202[0m [43m        [49m[43msource_address[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msource_address[49m[43m,[49m
[1;32m    203[0m [43m        [49m[43msocket_options[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msocket_options[49m[43m,[49m
[1;32m    204[0m [43m    [49m[43m)[49m
[1;32m    205[0m [38;5;28;01mexcept[39;00m socket[38;5;241m.[39mgaierror [38;5;28;01mas[39;00m e:

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/urllib3/util/connection.py:60[0m, in [0;36mcreate_connection[0;34m(address, timeout, source_address, socket_options)[0m
[1;32m     58[0m     [38;5;28;01mraise[39;00m LocationParseError([38;5;124mf[39m[38;5;124m"[39m[38;5;124m'[39m[38;5;132;01m{[39;00mhost[38;5;132;01m}[39;00m[38;5;124m'[39m[38;5;124m, label empty or too long[39m[38;5;124m"[39m) [38;5;28;01mfrom[39;00m [38;5;28;01mNone[39;00m
[0;32m---> 60[0m [38;5;28;01mfor[39;00m res [38;5;129;01min[39;00m [43msocket[49m[38;5;241;43m.[39;49m[43mgetaddrinfo[49m[43m([49m[43mhost[49m[43m,[49m[43m [49m[43mport[49m[43m,[49m[43m [49m[43mfamily[49m[43m,[49m[43m [49m[43msocket[49m[38;5;241;43m.[39;49m[43mSOCK_STREAM[49m[43m)[49m:
[1;32m     61[0m     af, socktype, proto, canonname, sa [38;5;241m=[39m res

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/socket.py:974[0m, in [0;36mgetaddrinfo[0;34m(host, port, family, type, proto, flags)[0m
[1;32m    973[0m addrlist [38;5;241m=[39m []
[0;32m--> 974[0m [38;5;28;01mfor[39;00m res [38;5;129;01min[39;00m [43m_socket[49m[38;5;241;43m.[39;49m[43mgetaddrinfo[49m[43m([49m[43mhost[49m[43m,[49m[43m [49m[43mport[49m[43m,[49m[43m [49m[43mfamily[49m[43m,[49m[43m [49m[38;5;28;43mtype[39;49m[43m,[49m[43m [49m[43mproto[49m[43m,[49m[43m [49m[43mflags[49m[43m)[49m:
[1;32m    975[0m     af, socktype, proto, canonname, sa [38;5;241m=[39m res

[0;31mgaierror[0m: [Errno 8] nodename nor servname provided, or not known

The above exception was the direct cause of the following exception:

[0;31mNameResolutionError[0m                       Traceback (most recent call last)
File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/urllib3/connectionpool.py:789[0m, in [0;36mHTTPConnectionPool.urlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)[0m
[1;32m    788[0m [38;5;66;03m# Make the request on the HTTPConnection object[39;00m
[0;32m--> 789[0m response [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_make_request[49m[43m([49m
[1;32m    790[0m [43m    [49m[43mconn[49m[43m,[49m
[1;32m    791[0m [43m    [49m[43mmethod[49m[43m,[49m
[1;32m    792[0m [43m    [49m[43murl[49m[43m,[49m
[1;32m    793[0m [43m    [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout_obj[49m[43m,[49m
[1;32m    794[0m [43m    [49m[43mbody[49m[38;5;241;43m=[39;49m[43mbody[49m[43m,[49m
[1;32m    795[0m [43m    [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mheaders[49m[43m,[49m
[1;32m    796[0m [43m    [49m[43mchunked[49m[38;5;241;43m=[39;49m[43mchunked[49m[43m,[49m
[1;32m    797[0m [43m    [49m[43mretries[49m[38;5;241;43m=[39;49m[43mretries[49m[43m,[49m
[1;32m    798[0m [43m    [49m[43mresponse_conn[49m[38;5;241;43m=[39;49m[43mresponse_conn[49m[43m,[49m
[1;32m    799[0m [43m    [49m[43mpreload_content[49m[38;5;241;43m=[39;49m[43mpreload_content[49m[43m,[49m
[1;32m    800[0m [43m    [49m[43mdecode_content[49m[38;5;241;43m=[39;49m[43mdecode_content[49m[43m,[49m
[1;32m    801[0m [43m    [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mresponse_kw[49m[43m,[49m
[1;32m    802[0m [43m[49m[43m)[49m
[1;32m    804[0m [38;5;66;03m# Everything went great![39;00m

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/urllib3/connectionpool.py:495[0m, in [0;36mHTTPConnectionPool._make_request[0;34m(self, conn, method, url, body, headers, retries, timeout, chunked, response_conn, preload_content, decode_content, enforce_content_length)[0m
[1;32m    494[0m [38;5;28;01mtry[39;00m:
[0;32m--> 495[0m     [43mconn[49m[38;5;241;43m.[39;49m[43mrequest[49m[43m([49m
[1;32m    496[0m [43m        [49m[43mmethod[49m[43m,[49m
[1;32m    497[0m [43m        [49m[43murl[49m[43m,[49m
[1;32m    498[0m [43m        [49m[43mbody[49m[38;5;241;43m=[39;49m[43mbody[49m[43m,[49m
[1;32m    499[0m [43m        [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mheaders[49m[43m,[49m
[1;32m    500[0m [43m        [49m[43mchunked[49m[38;5;241;43m=[39;49m[43mchunked[49m[43m,[49m
[1;32m    501[0m [43m        [49m[43mpreload_content[49m[38;5;241;43m=[39;49m[43mpreload_content[49m[43m,[49m
[1;32m    502[0m [43m        [49m[43mdecode_content[49m[38;5;241;43m=[39;49m[43mdecode_content[49m[43m,[49m
[1;32m    503[0m [43m        [49m[43menforce_content_length[49m[38;5;241;43m=[39;49m[43menforce_content_length[49m[43m,[49m
[1;32m    504[0m [43m    [49m[43m)[49m
[1;32m    506[0m [38;5;66;03m# We are swallowing BrokenPipeError (errno.EPIPE) since the server is[39;00m
[1;32m    507[0m [38;5;66;03m# legitimately able to close the connection after sending a valid response.[39;00m
[1;32m    508[0m [38;5;66;03m# With this behaviour, the received response is still readable.[39;00m

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/urllib3/connection.py:441[0m, in [0;36mHTTPConnection.request[0;34m(self, method, url, body, headers, chunked, preload_content, decode_content, enforce_content_length)[0m
[1;32m    440[0m     [38;5;28mself[39m[38;5;241m.[39mputheader(header, value)
[0;32m--> 441[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mendheaders[49m[43m([49m[43m)[49m
[1;32m    443[0m [38;5;66;03m# If we're given a body we start sending that in chunks.[39;00m

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/http/client.py:1298[0m, in [0;36mHTTPConnection.endheaders[0;34m(self, message_body, encode_chunked)[0m
[1;32m   1297[0m     [38;5;28;01mraise[39;00m CannotSendHeader()
[0;32m-> 1298[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_send_output[49m[43m([49m[43mmessage_body[49m[43m,[49m[43m [49m[43mencode_chunked[49m[38;5;241;43m=[39;49m[43mencode_chunked[49m[43m)[49m

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/http/client.py:1058[0m, in [0;36mHTTPConnection._send_output[0;34m(self, message_body, encode_chunked)[0m
[1;32m   1057[0m [38;5;28;01mdel[39;00m [38;5;28mself[39m[38;5;241m.[39m_buffer[:]
[0;32m-> 1058[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msend[49m[43m([49m[43mmsg[49m[43m)[49m
[1;32m   1060[0m [38;5;28;01mif[39;00m message_body [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m   1061[0m 
[1;32m   1062[0m     [38;5;66;03m# create a consistent interface to message_body[39;00m

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/http/client.py:996[0m, in [0;36mHTTPConnection.send[0;34m(self, data)[0m
[1;32m    995[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mauto_open:
[0;32m--> 996[0m     [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mconnect[49m[43m([49m[43m)[49m
[1;32m    997[0m [38;5;28;01melse[39;00m:

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/urllib3/connection.py:279[0m, in [0;36mHTTPConnection.connect[0;34m(self)[0m
[1;32m    278[0m [38;5;28;01mdef[39;00m [38;5;21mconnect[39m([38;5;28mself[39m) [38;5;241m-[39m[38;5;241m>[39m [38;5;28;01mNone[39;00m:
[0;32m--> 279[0m     [38;5;28mself[39m[38;5;241m.[39msock [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_new_conn[49m[43m([49m[43m)[49m
[1;32m    280[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_tunnel_host:
[1;32m    281[0m         [38;5;66;03m# If we're tunneling it means we're connected to our proxy.[39;00m

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/urllib3/connection.py:206[0m, in [0;36mHTTPConnection._new_conn[0;34m(self)[0m
[1;32m    205[0m [38;5;28;01mexcept[39;00m socket[38;5;241m.[39mgaierror [38;5;28;01mas[39;00m e:
[0;32m--> 206[0m     [38;5;28;01mraise[39;00m NameResolutionError([38;5;28mself[39m[38;5;241m.[39mhost, [38;5;28mself[39m, e) [38;5;28;01mfrom[39;00m [38;5;21;01me[39;00m
[1;32m    207[0m [38;5;28;01mexcept[39;00m SocketTimeout [38;5;28;01mas[39;00m e:

[0;31mNameResolutionError[0m: <urllib3.connection.HTTPConnection object at 0x155735310>: Failed to resolve 'test.opendap.org' ([Errno 8] nodename nor servname provided, or not known)

The above exception was the direct cause of the following exception:

[0;31mMaxRetryError[0m                             Traceback (most recent call last)
File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/requests/adapters.py:667[0m, in [0;36mHTTPAdapter.send[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    666[0m [38;5;28;01mtry[39;00m:
[0;32m--> 667[0m     resp [38;5;241m=[39m [43mconn[49m[38;5;241;43m.[39;49m[43murlopen[49m[43m([49m
[1;32m    668[0m [43m        [49m[43mmethod[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mmethod[49m[43m,[49m
[1;32m    669[0m [43m        [49m[43murl[49m[38;5;241;43m=[39;49m[43murl[49m[43m,[49m
[1;32m    670[0m [43m        [49m[43mbody[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mbody[49m[43m,[49m
[1;32m    671[0m [43m        [49m[43mheaders[49m[38;5;241;43m=[39;49m[43mrequest[49m[38;5;241;43m.[39;49m[43mheaders[49m[43m,[49m
[1;32m    672[0m [43m        [49m[43mredirect[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m    673[0m [43m        [49m[43massert_same_host[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m    674[0m [43m        [49m[43mpreload_content[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m    675[0m [43m        [49m[43mdecode_content[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m,[49m
[1;32m    676[0m [43m        [49m[43mretries[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmax_retries[49m[43m,[49m
[1;32m    677[0m [43m        [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout[49m[43m,[49m
[1;32m    678[0m [43m        [49m[43mchunked[49m[38;5;241;43m=[39;49m[43mchunked[49m[43m,[49m
[1;32m    679[0m [43m    [49m[43m)[49m
[1;32m    681[0m [38;5;28;01mexcept[39;00m (ProtocolError, [38;5;167;01mOSError[39;00m) [38;5;28;01mas[39;00m err:

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/urllib3/connectionpool.py:843[0m, in [0;36mHTTPConnectionPool.urlopen[0;34m(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, chunked, body_pos, preload_content, decode_content, **response_kw)[0m
[1;32m    841[0m     new_e [38;5;241m=[39m ProtocolError([38;5;124m"[39m[38;5;124mConnection aborted.[39m[38;5;124m"[39m, new_e)
[0;32m--> 843[0m retries [38;5;241m=[39m [43mretries[49m[38;5;241;43m.[39;49m[43mincrement[49m[43m([49m
[1;32m    844[0m [43m    [49m[43mmethod[49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[43merror[49m[38;5;241;43m=[39;49m[43mnew_e[49m[43m,[49m[43m [49m[43m_pool[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[43m,[49m[43m [49m[43m_stacktrace[49m[38;5;241;43m=[39;49m[43msys[49m[38;5;241;43m.[39;49m[43mexc_info[49m[43m([49m[43m)[49m[43m[[49m[38;5;241;43m2[39;49m[43m][49m
[1;32m    845[0m [43m[49m[43m)[49m
[1;32m    846[0m retries[38;5;241m.[39msleep()

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/urllib3/util/retry.py:519[0m, in [0;36mRetry.increment[0;34m(self, method, url, response, error, _pool, _stacktrace)[0m
[1;32m    518[0m     reason [38;5;241m=[39m error [38;5;129;01mor[39;00m ResponseError(cause)
[0;32m--> 519[0m     [38;5;28;01mraise[39;00m MaxRetryError(_pool, url, reason) [38;5;28;01mfrom[39;00m [38;5;21;01mreason[39;00m  [38;5;66;03m# type: ignore[arg-type][39;00m
[1;32m    521[0m log[38;5;241m.[39mdebug([38;5;124m"[39m[38;5;124mIncremented Retry for (url=[39m[38;5;124m'[39m[38;5;132;01m%s[39;00m[38;5;124m'[39m[38;5;124m): [39m[38;5;132;01m%r[39;00m[38;5;124m"[39m, url, new_retry)

[0;31mMaxRetryError[0m: HTTPConnectionPool(host='test.opendap.org', port=8080): Max retries exceeded with url: /opendap/tutorials/20220531090000-JPL-L4_GHRSST-SSTfnd-MUR-GLOB-v02.0-fv04.1.nc.dmr (Caused by NameResolutionError("<urllib3.connection.HTTPConnection object at 0x155735310>: Failed to resolve 'test.opendap.org' ([Errno 8] nodename nor servname provided, or not known)"))

During handling of the above exception, another exception occurred:

[0;31mConnectionError[0m                           Traceback (most recent call last)
Cell [0;32mIn[3], line 1[0m
[0;32m----> 1[0m pydap_ds [38;5;241m=[39m [43mopen_url[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mprotocol[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mdap4[39;49m[38;5;124;43m'[39;49m[43m)[49m

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/pydap/client.py:78[0m, in [0;36mopen_url[0;34m(url, application, session, output_grid, timeout, verify, user_charset, protocol)[0m
[1;32m     62[0m [38;5;28;01mdef[39;00m [38;5;21mopen_url[39m(
[1;32m     63[0m     url,
[1;32m     64[0m     application[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[0;32m   (...)[0m
[1;32m     70[0m     protocol[38;5;241m=[39m[38;5;28;01mNone[39;00m,
[1;32m     71[0m ):
[1;32m     72[0m [38;5;250m    [39m[38;5;124;03m"""[39;00m
[1;32m     73[0m [38;5;124;03m    Open a remote URL, returning a dataset.[39;00m
[1;32m     74[0m 
[1;32m     75[0m [38;5;124;03m    set output_grid to `False` to retrieve only main arrays and[39;00m
[1;32m     76[0m [38;5;124;03m    never retrieve coordinate axes.[39;00m
[1;32m     77[0m [38;5;124;03m    """[39;00m
[0;32m---> 78[0m     handler [38;5;241m=[39m [43mpydap[49m[38;5;241;43m.[39;49m[43mhandlers[49m[38;5;241;43m.[39;49m[43mdap[49m[38;5;241;43m.[39;49m[43mDAPHandler[49m[43m([49m
[1;32m     79[0m [43m        [49m[43murl[49m[43m,[49m
[1;32m     80[0m [43m        [49m[43mapplication[49m[43m,[49m
[1;32m     81[0m [43m        [49m[43msession[49m[43m,[49m
[1;32m     82[0m [43m        [49m[43moutput_grid[49m[43m,[49m
[1;32m     83[0m [43m        [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout[49m[43m,[49m
[1;32m     84[0m [43m        [49m[43mverify[49m[38;5;241;43m=[39;49m[43mverify[49m[43m,[49m
[1;32m     85[0m [43m        [49m[43muser_charset[49m[38;5;241;43m=[39;49m[43muser_charset[49m[43m,[49m
[1;32m     86[0m [43m        [49m[43mprotocol[49m[38;5;241;43m=[39;49m[43mprotocol[49m[43m,[49m
[1;32m     87[0m [43m    [49m[43m)[49m
[1;32m     88[0m     dataset [38;5;241m=[39m handler[38;5;241m.[39mdataset
[1;32m     90[0m     [38;5;66;03m# attach server-side functions[39;00m

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/pydap/handlers/dap.py:98[0m, in [0;36mDAPHandler.__init__[0;34m(self, url, application, session, output_grid, timeout, verify, user_charset, protocol)[0m
[1;32m     89[0m arg [38;5;241m=[39m (
[1;32m     90[0m     [38;5;28mself[39m[38;5;241m.[39mscheme,
[1;32m     91[0m     [38;5;28mself[39m[38;5;241m.[39mnetloc,
[0;32m   (...)[0m
[1;32m     95[0m     [38;5;28mself[39m[38;5;241m.[39mfragment,
[1;32m     96[0m )
[1;32m     97[0m [38;5;28mself[39m[38;5;241m.[39mbase_url [38;5;241m=[39m urlunparse(arg)
[0;32m---> 98[0m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mmake_dataset[49m[43m([49m[43m)[49m
[1;32m     99[0m [38;5;28mself[39m[38;5;241m.[39madd_proxies()

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/pydap/handlers/dap.py:132[0m, in [0;36mDAPHandler.make_dataset[0;34m(self)[0m
[1;32m    128[0m [38;5;28;01mdef[39;00m [38;5;21mmake_dataset[39m(
[1;32m    129[0m     [38;5;28mself[39m,
[1;32m    130[0m ):
[1;32m    131[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mprotocol [38;5;241m==[39m [38;5;124m"[39m[38;5;124mdap4[39m[38;5;124m"[39m:
[0;32m--> 132[0m         [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mdataset_from_dap4[49m[43m([49m[43m)[49m
[1;32m    133[0m     [38;5;28;01melse[39;00m:
[1;32m    134[0m         [38;5;28mself[39m[38;5;241m.[39mdataset_from_dap2()

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/pydap/handlers/dap.py:148[0m, in [0;36mDAPHandler.dataset_from_dap4[0;34m(self)[0m
[1;32m    137[0m [38;5;28;01mdef[39;00m [38;5;21mdataset_from_dap4[39m([38;5;28mself[39m):
[1;32m    138[0m     dmr_url [38;5;241m=[39m urlunparse(
[1;32m    139[0m         (
[1;32m    140[0m             [38;5;28mself[39m[38;5;241m.[39mscheme,
[0;32m   (...)[0m
[1;32m    146[0m         )
[1;32m    147[0m     )
[0;32m--> 148[0m     r [38;5;241m=[39m [43mGET[49m[43m([49m
[1;32m    149[0m [43m        [49m[43mdmr_url[49m[43m,[49m
[1;32m    150[0m [43m        [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mapplication[49m[43m,[49m
[1;32m    151[0m [43m        [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msession[49m[43m,[49m
[1;32m    152[0m [43m        [49m[43mtimeout[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mtimeout[49m[43m,[49m
[1;32m    153[0m [43m        [49m[43mverify[49m[38;5;241;43m=[39;49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mverify[49m[43m,[49m
[1;32m    154[0m [43m    [49m[43m)[49m
[1;32m    155[0m     raise_for_status(r)
[1;32m    156[0m     dmr [38;5;241m=[39m safe_charset_text(r, [38;5;28mself[39m[38;5;241m.[39muser_charset)

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/pydap/net.py:26[0m, in [0;36mGET[0;34m(url, application, session, timeout, verify)[0m
[1;32m     23[0m     _, _, path, _, query, fragment [38;5;241m=[39m urlparse(url)
[1;32m     24[0m     url [38;5;241m=[39m urlunparse(([38;5;124m"[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124m"[39m, path, [38;5;124m"[39m[38;5;124m"[39m, _quote(query), fragment))
[0;32m---> 26[0m response [38;5;241m=[39m [43mfollow_redirect[49m[43m([49m
[1;32m     27[0m [43m    [49m[43murl[49m[43m,[49m[43m [49m[43mapplication[49m[38;5;241;43m=[39;49m[43mapplication[49m[43m,[49m[43m [49m[43msession[49m[38;5;241;43m=[39;49m[43msession[49m[43m,[49m[43m [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout[49m[43m,[49m[43m [49m[43mverify[49m[38;5;241;43m=[39;49m[43mverify[49m
[1;32m     28[0m [43m[49m[43m)[49m
[1;32m     29[0m [38;5;66;03m# Decode request response (i.e. gzip)[39;00m
[1;32m     30[0m response[38;5;241m.[39mdecode_content()

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/pydap/net.py:78[0m, in [0;36mfollow_redirect[0;34m(url, application, session, timeout, verify)[0m
[1;32m     67[0m [38;5;28;01mdef[39;00m [38;5;21mfollow_redirect[39m(
[1;32m     68[0m     url, application[38;5;241m=[39m[38;5;28;01mNone[39;00m, session[38;5;241m=[39m[38;5;28;01mNone[39;00m, timeout[38;5;241m=[39mDEFAULT_TIMEOUT, verify[38;5;241m=[39m[38;5;28;01mTrue[39;00m
[1;32m     69[0m ):
[1;32m     70[0m [38;5;250m    [39m[38;5;124;03m"""[39;00m
[1;32m     71[0m [38;5;124;03m    This function essentially performs the following command:[39;00m
[1;32m     72[0m [38;5;124;03m    >>> Request.blank(url).get_response(application)  # doctest: +SKIP[39;00m
[0;32m   (...)[0m
[1;32m     75[0m [38;5;124;03m    headers as the passed session.[39;00m
[1;32m     76[0m [38;5;124;03m    """[39;00m
[0;32m---> 78[0m     req [38;5;241m=[39m [43mcreate_request[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43msession[49m[38;5;241;43m=[39;49m[43msession[49m[43m,[49m[43m [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout[49m[43m,[49m[43m [49m[43mverify[49m[38;5;241;43m=[39;49m[43mverify[49m[43m)[49m
[1;32m     79[0m     [38;5;28;01mreturn[39;00m get_response(req, application, verify[38;5;241m=[39mverify)

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/pydap/net.py:130[0m, in [0;36mcreate_request[0;34m(url, session, timeout, verify)[0m
[1;32m    125[0m     [38;5;28;01mreturn[39;00m create_request_from_session(url, session, timeout[38;5;241m=[39mtimeout, verify[38;5;241m=[39mverify)
[1;32m    126[0m [38;5;28;01melse[39;00m:
[1;32m    127[0m     [38;5;66;03m# If a session object was not passed, we simply pass a new[39;00m
[1;32m    128[0m     [38;5;66;03m# requests.Session() object. The requests library allows the[39;00m
[1;32m    129[0m     [38;5;66;03m# handling of redirects that are not naturally handled by Webob.[39;00m
[0;32m--> 130[0m     [38;5;28;01mreturn[39;00m [43mcreate_request_from_session[49m[43m([49m
[1;32m    131[0m [43m        [49m[43murl[49m[43m,[49m[43m [49m[43mrequests[49m[38;5;241;43m.[39;49m[43mSession[49m[43m([49m[43m)[49m[43m,[49m[43m [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout[49m[43m,[49m[43m [49m[43mverify[49m[38;5;241;43m=[39;49m[43mverify[49m
[1;32m    132[0m [43m    [49m[43m)[49m

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/pydap/net.py:139[0m, in [0;36mcreate_request_from_session[0;34m(url, session, timeout, verify)[0m
[1;32m    135[0m [38;5;28;01mdef[39;00m [38;5;21mcreate_request_from_session[39m(url, session, timeout[38;5;241m=[39mDEFAULT_TIMEOUT, verify[38;5;241m=[39m[38;5;28;01mTrue[39;00m):
[1;32m    136[0m     [38;5;28;01mtry[39;00m:
[1;32m    137[0m         [38;5;66;03m# Use session to follow redirects:[39;00m
[1;32m    138[0m         [38;5;28;01mwith[39;00m closing(
[0;32m--> 139[0m             [43msession[49m[38;5;241;43m.[39;49m[43mhead[49m[43m([49m[43murl[49m[43m,[49m[43m [49m[43mallow_redirects[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m [49m[43mtimeout[49m[38;5;241;43m=[39;49m[43mtimeout[49m[43m,[49m[43m [49m[43mverify[49m[38;5;241;43m=[39;49m[43mverify[49m[43m)[49m
[1;32m    140[0m         ) [38;5;28;01mas[39;00m head:
[1;32m    141[0m             req [38;5;241m=[39m Request[38;5;241m.[39mblank(head[38;5;241m.[39murl)
[1;32m    142[0m             req[38;5;241m.[39menviron[[38;5;124m"[39m[38;5;124mwebob.client.timeout[39m[38;5;124m"[39m] [38;5;241m=[39m timeout

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/requests/sessions.py:624[0m, in [0;36mSession.head[0;34m(self, url, **kwargs)[0m
[1;32m    616[0m [38;5;250m[39m[38;5;124mr[39m[38;5;124;03m"""Sends a HEAD request. Returns :class:`Response` object.[39;00m
[1;32m    617[0m 
[1;32m    618[0m [38;5;124;03m:param url: URL for the new :class:`Request` object.[39;00m
[1;32m    619[0m [38;5;124;03m:param \*\*kwargs: Optional arguments that ``request`` takes.[39;00m
[1;32m    620[0m [38;5;124;03m:rtype: requests.Response[39;00m
[1;32m    621[0m [38;5;124;03m"""[39;00m
[1;32m    623[0m kwargs[38;5;241m.[39msetdefault([38;5;124m"[39m[38;5;124mallow_redirects[39m[38;5;124m"[39m, [38;5;28;01mFalse[39;00m)
[0;32m--> 624[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mrequest[49m[43m([49m[38;5;124;43m"[39;49m[38;5;124;43mHEAD[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43murl[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/requests/sessions.py:589[0m, in [0;36mSession.request[0;34m(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)[0m
[1;32m    584[0m send_kwargs [38;5;241m=[39m {
[1;32m    585[0m     [38;5;124m"[39m[38;5;124mtimeout[39m[38;5;124m"[39m: timeout,
[1;32m    586[0m     [38;5;124m"[39m[38;5;124mallow_redirects[39m[38;5;124m"[39m: allow_redirects,
[1;32m    587[0m }
[1;32m    588[0m send_kwargs[38;5;241m.[39mupdate(settings)
[0;32m--> 589[0m resp [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43msend[49m[43m([49m[43mprep[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43msend_kwargs[49m[43m)[49m
[1;32m    591[0m [38;5;28;01mreturn[39;00m resp

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/requests/sessions.py:703[0m, in [0;36mSession.send[0;34m(self, request, **kwargs)[0m
[1;32m    700[0m start [38;5;241m=[39m preferred_clock()
[1;32m    702[0m [38;5;66;03m# Send the request[39;00m
[0;32m--> 703[0m r [38;5;241m=[39m [43madapter[49m[38;5;241;43m.[39;49m[43msend[49m[43m([49m[43mrequest[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m    705[0m [38;5;66;03m# Total elapsed time of the request (approximately)[39;00m
[1;32m    706[0m elapsed [38;5;241m=[39m preferred_clock() [38;5;241m-[39m start

File [0;32m~/mambaforge/envs/pydap_docs/lib/python3.11/site-packages/requests/adapters.py:700[0m, in [0;36mHTTPAdapter.send[0;34m(self, request, stream, timeout, verify, cert, proxies)[0m
[1;32m    696[0m     [38;5;28;01mif[39;00m [38;5;28misinstance[39m(e[38;5;241m.[39mreason, _SSLError):
[1;32m    697[0m         [38;5;66;03m# This branch is for urllib3 v1.22 and later.[39;00m
[1;32m    698[0m         [38;5;28;01mraise[39;00m SSLError(e, request[38;5;241m=[39mrequest)
[0;32m--> 700[0m     [38;5;28;01mraise[39;00m [38;5;167;01mConnectionError[39;00m(e, request[38;5;241m=[39mrequest)
[1;32m    702[0m [38;5;28;01mexcept[39;00m ClosedPoolError [38;5;28;01mas[39;00m e:
[1;32m    703[0m     [38;5;28;01mraise[39;00m [38;5;167;01mConnectionError[39;00m(e, request[38;5;241m=[39mrequest)

[0;31mConnectionError[0m: HTTPConnectionPool(host='test.opendap.org', port=8080): Max retries exceeded with url: /opendap/tutorials/20220531090000-JPL-L4_GHRSST-SSTfnd-MUR-GLOB-v02.0-fv04.1.nc.dmr (Caused by NameResolutionError("<urllib3.connection.HTTPConnection object at 0x155735310>: Failed to resolve 'test.opendap.org' ([Errno 8] nodename nor servname provided, or not known)"))

