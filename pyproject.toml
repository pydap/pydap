[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools >= 64", "setuptools_scm[toml]>=8"]

[project]
authors = [{name = 'Roberto De Almeida', email = 'roberto@dealmeida.net'}]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Science/Research",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Operating System :: MacOS",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX",
  "Operating System :: POSIX :: Linux",
  "Topic :: Scientific/Engineering",
  "License :: OSI Approved :: MIT License"
]
dependencies = [
  "numpy >= 2.0",
  "requests",
  "scipy"
]
description = "A pure python implementation of the Data Access Protocol."
dynamic = ["version"]
license = {file = "LICENSE"}
maintainers = [{name = 'Miguel Jimenez-Urias', email = 'mjimenez@opendap.org'}]
name = "pydap"
readme = "README.md"
requires-python = ">=3.10"

[project.entry-points."console_scripts"]
dods = "pydap.handlers.dap:dump"
pydap = "pydap.wsgi.app:main"

[project.entry-points."pydap.function"]
bounds = "pydap.wsgi.functions:bounds"
density = "pydap.wsgi.functions:density"
mean = "pydap.wsgi.functions:mean"

[project.entry-points."pydap.handler"]
csv = "pydap.handlers.csv:CSVHandler"
nc = "pydap.handlers.netcdf:NetCDFHandler"

[project.entry-points."pydap.response"]
asc = "pydap.responses.ascii:ASCIIResponse"
ascii = "pydap.responses.ascii:ASCIIResponse"
das = "pydap.responses.das:DASResponse"
dds = "pydap.responses.dds:DDSResponse"
dmr = "pydap.responses.dmr:DMRResponse"
dods = "pydap.responses.dods:DODSResponse"
html = "pydap.responses.html:HTMLResponse"
ver = "pydap.responses.version:VersionResponse"

[project.optional-dependencies]
cas = ['lxml']
docs = ['Sphinx', 'Pygments', "pandoc", "sphinx_rtd_theme", "nbsphinx", "numpydoc"]
functions = ['gsw==3.0.6', 'coards']
netcdf = ['netCDF4']
server = ['gunicorn', 'PasteDeploy', 'docopt-ng', 'Webob', 'Jinja2', 'beautifulsoup4', 'lxml']
tests = [
  'pytest>=3.6',
  'pytest-cov',
  'pytest-attrib',
  'requests-mock',
  'WebTest',
  'flake8',
  'werkzeug>= 2.2.2',
  'gunicorn',
  'cryptography',
  'gsw',
  'coards',
  "docopt-ng",
  "Webob",
  "Jinja2",
  "beautifulsoup4",
  "lxml"
]

[tool.isort]
profile = "black"

[tool.pytest.ini_options]
addopts = "-v --cov"
testpaths = ["/src/pydap/tests"]

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
version_file = "src/pydap/_version.py"
